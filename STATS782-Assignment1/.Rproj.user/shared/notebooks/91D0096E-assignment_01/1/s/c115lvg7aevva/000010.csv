"0","segments <- function(from, to, rep = FALSE) {"
"0","  options(warn = 1)"
"0","  "
"0","  validateValue <- function(name, value) {"
"0","    if (any(value > 1)) {"
"0","      value[value > 1] = 1"
"0","      warning(paste0("" '"", name, ""' value(s) larger than 1 reduced to 1 \n""))"
"0","    }"
"0","  "
"0","    if (any(value < -1)) {"
"0","      value[value < -1] = -1"
"0","      warning(paste0("" '"", name, ""' value(s) less than -1 raised to -1 \n""))"
"0","    }"
"0","    "
"0","    negitiveFloat = value > -1 & value < 0"
"0","    value[negitiveFloat] = 1 + value[negitiveFloat]"
"0","    "
"0","    value"
"0","  }"
"0","  "
"0","  if (!rep) {"
"0","    if (length(from) > 1 & length(to) == 1) {"
"0","      from <- sort(from, decreasing = FALSE)"
"0","      to <- rep(to, length(from))"
"0","    }"
"0","    "
"0","    if (length(to) > 1 & length(from) == 1) {"
"0","      to <- sort(to, decreasing = FALSE)"
"0","      from <- rep(from, length(to))"
"0","    }"
"0","  } else {"
"0","    if (length(from) == 1 & length(to) == 1) {"
"0","      if (from > to) {"
"0","        temp <- from"
"0","        from <- to"
"0","        to <- temp"
"0","      }"
"0","      from <- seq(from = from, to = 1, by = to)"
"0","      to <- seq(from = to, to = 1, by = to)"
"0","      "
"0","      if (length(to) > length(from)) {"
"0","        from <- c(from, 1)"
"0","      }"
"0","      if (length(to) < length(from)) {"
"0","        to <- c(to, 1)"
"0","      }"
"0","    } else {"
"0","      if (length(from) > 1 & length(to) == 1) {"
"0","        to <- rep(to, length(from))"
"0","      }"
"0","      if (length(to) > 1 & length(from) == 1) {"
"0","        from <- rep(from, length(to))"
"0","      }"
"0","      vec <- sort(c(from, to), decreasing = FALSE)"
"0","      tv <- ceiling(1/vec[length(vec)])"
"0","      vec1 <- rep(vec, times = tv)"
"0","      vec2 <-  rep(0:(tv-1) * rep(vec[length(vec)]), each = length(vec))"
"0","      vec <- vec1 + vec2"
"0","      mat <- matrix(vec, nrow = 2)"
"0","      rownames(mat) <- c('from', 'to')"
"0","      from <- mat[""from"",]"
"0","      to <- mat[""to"",]"
"0","    }"
"0","  }"
"0","  "
"0","  # general Code for merging row and columns"
"0","  if (length(from) == length(to)) {"
"0","    rowBind <- rbind(from, to)"
"0","    vector <- c(rowBind)"
"0","    matrix <- matrix(vector, ncol = length(from))"
"0","    dimnames(matrix) <- list(c('from', 'to'))"
"0","    matrix <- t(matrix)"
"0","    matrix[, ""from""] <- validateValue(""from"", matrix[, ""from""])"
"0","    matrix[, ""to""] <- validateValue(""to"", matrix[, ""to""])"
"0","    element <- matrix[, ""from""] > matrix[, ""to""] "
"0","    fromValue <- matrix[, ""from""][element] "
"0","    toValue <- matrix[, ""to""][element]"
"0","    matrix[, ""from""][element] <- toValue"
"0","    matrix[, ""to""][element] <- fromValue"
"0","    "
"0","    # Duplicate row check, takes place for repeat"
"0","    if (rep) {"
"0","      duplicateUperLimit <- matrix[, ""from""] == matrix[, ""to""] & matrix[, ""from""] == 1"
"0","      matrix <- matrix[!duplicateUperLimit,]"
"0","      "
"0","      f <- matrix[, ""from""]"
"0","      t <- matrix[, ""to""]"
"0","      if (f[length(f)] != 1 & t[length(t)] != 1) {"
"0","         matrix <- rbind(matrix, 1)"
"0","      }"
"0","    }"
"0","    "
"0","    matrix"
"0","  }"
"0","  "
"0","}"
"0","  segments(c(.3, .1), .2, rep=TRUE)"
"2"," 'from' value(s) larger than 1 reduced to 1 
"
"2"," 'to' value(s) larger than 1 reduced to 1 
"
"1","    "
"1"," from"
"1","  to"
"1","
[1,]"
"1","  0.1"
"1"," 0.2"
"1","
[2,]"
"1","  0.2"
"1"," 0.3"
"1","
[3,]"
"1","  0.4"
"1"," 0.5"
"1","
[4,]"
"1","  0.5"
"1"," 0.6"
"1","
[5,]"
"1","  0.7"
"1"," 0.8"
"1","
[6,]"
"1","  0.8"
"1"," 0.9"
"1","
[7,]"
"1","  1.0"
"1"," 1.0"
"1","
"
