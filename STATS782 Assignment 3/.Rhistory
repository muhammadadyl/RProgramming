knitr::opts_chunk$set(echo = TRUE)
#jpeg(file="Q1Answer.jpg")
x0 <- c(1, 3)
y0 <- c(1, 1)
x1 <- c(1, 3)
y1 <- c(3, 3)
plot(NULL, xlim = c(0, 4), ylim= c(0, 4), type = "l", axes=FALSE, frame.plot=FALSE, ann=FALSE)
rect(0, 0, 4, 4, col = rgb(red = 227/255, green = 100/255, blue = 65/255), border = NA)
arrows(x1[2], y1[2], x1=x1[1], y1=y1[1], lwd=8, length = .8, col='white', angle = 135, code = 3, lend = 2, xpd = TRUE)
arrows(x0[2], y0[2], x1=x0[1], y1=y0[1], lwd=8, length = .8, col='white', angle = 45, code = 3, lend = 2, xpd = TRUE)
#dev.off()
#pdf(file="Q2aAnswer.pdf")
x <- seq(-4, 4, length = 1000)
xplot <- x[x < -0.862]
yplot <- dnorm(xplot, mean = 0, sd = 1)
plot(xplot, yplot, type = "l", col = "green4", lwd = 3, axes = FALSE, frame.plot = FALSE, ann = FALSE, ylim = c(-.1, .5), xlim = c(-4, 4))
xline <- x[x >= -0.862]
yline <- dnorm(xline, mean = 0, sd = 1)
lines(x = xline, y = yline, col = "blue", lwd = 3)
meanOmega <- dnorm(-0.862, mean = 0, sd = 1)
abline(h = 0, col = "blue", lwd = 3)
lines(x = c(-.862, -.862), y =c(-.02, meanOmega), col = "purple", lty="6666", lwd = 3)
points(x = -.862, y = -.02, pch = 17, col = "purple", cex = 4)
text(x =  -.862, y = -.03, labels = expression(paste(mu, "(", omega,"=", "0.1)")), col = "purple", pos = 1, cex=2)
points(x = -1.415, y = -.011, pch = 2, col = "green4", cex = 2, lwd = 3)
text(x =  -1.415, y = -.004, labels = expression('C'[1]), col = "green4", pos = 3, cex=2)
points(x = 0.342, y = -.018, pch = 2, col = "blue", cex = 5, lwd = 3)
text(x =  0.342, y = -.004, labels = expression('C'[2]), col = "blue", pos = 3, cex=2)
#dev.off()
#pdf(file="Q2bAnswer.pdf")
# sequence for generating Bell graph
x <- seq(-4, 4, length = 1000)
# line ploting of elements below -0.0862
xplot <- x[x < -0.862]
yplot <- dnorm(xplot, mean = 0, sd = 1)
plot(xplot, yplot, type = "l", col=rgb(0, 1, 0, .3), lwd = 3, axes = FALSE, frame.plot = FALSE, ann = FALSE, ylim = c(-.1, .5), xlim = c(-4, 4))
# Ploygon filling of area below -0.862
m <- length(xplot)
x.poly <- c(xplot, xplot[m], xplot[1])        # Adjoin two x-coordinates
y.poly <- c(yplot, 0, 0)                      # .. and the corresponding y-coordinates
polygon(x.poly, y.poly, col=rgb(0, 1, 0, .3), border=NA)
# line plotting of elements above or equal to -0.862
xline <- x[x >= -0.862]
yline <- dnorm(xline, mean = 0, sd = 1)
lines(x = xline, y = yline, col = rgb(0, 0, 1, .3), lwd = 3)
# Ploygon filling of elements above or equal to -0.862
m <- length(xline)
x.poly <- c(xline, xline[m], xline[1])        # Adjoin two x-coordinates
y.poly <- c(yline, 0, 0)                      # .. and the corresponding y-coordinates
polygon(x.poly, y.poly, col=rgb(0, 0, 1, .3), border=NA)
# Partitioning line
meanOmega <- dnorm(-0.862, mean = 0, sd = 1)
lines(x = c(-.862, -.862), y =c(-.02, meanOmega), col = "purple", lty="6666", lwd = 3)
#plotting and text
points(x = -.862, y = -.02, pch = 17, col = "purple", cex = 4)
text(x =  -.862, y = -.03, labels = expression(paste(mu, "(", omega,"=", "0.1)")), col = "purple", pos = 1, cex=2)
text(x =  -1.415, y = -.004, labels = expression('C'[1]), col = "white", pos = 3, cex=4)
text(x =  0.342, y = -.004, labels = expression('C'[2]), col = "white", pos = 3, cex=4)
#dev.off()
#pdf(file="Q3Answer.pdf")
plot.new()
plot.window(xlim = c(-2, 2), ylim = c(-2, 2), asp = 1)
theta0 <- seq(0, 2 * pi, length = 150)
x <- 2 * cos(theta0)
y <- 2 * sin(theta0)
polygon(x, y, col = "darkseagreen" , border = "black", lwd = 2)
theta <- seq(0, 6*pi, length = 150)
# four curves in circle
spiralCurve <- 1/(3*pi)
r1 <- spiralCurve * theta
r2 <- (spiralCurve + .021) * theta
x1 <- r1 * cos(theta)
y1 <- r1 * sin(theta)
x2 <- r2 * cos(theta)
y2 <- r2 * sin(theta)
# verification of distance that should not exceed 2 units
for (i in 1:150) {
if(sqrt((x2[i]^2) + (y2[i]^2)) > 2) {
x2[i] <- 2 * cos(theta[i])
y2[i] <- 2 * sin(theta[i])
}
}
lines(x1, y1, col = "red", type = 'l')
lines(x2, y2, col = "red", type = 'l')
polygon(c(x1, rev(x2)), c(y1, rev(y2)), col = "white", border = "red", lwd = 4)
#dev.off()
