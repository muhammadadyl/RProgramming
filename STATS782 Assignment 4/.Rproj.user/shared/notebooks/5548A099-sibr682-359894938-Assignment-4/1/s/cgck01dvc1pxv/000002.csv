"0","setClass(""regpolygon4"",  "
"0","         representation("
"0","              x = ""numeric"", "
"0","              y = ""numeric"", "
"0","              name = ""character"", "
"0","              radius = ""numeric"","
"0","              shift = ""numeric"","
"0","              sides = ""numeric"""
"0","           )"
"0","         )"
"0","setClass(""newregpolygon4"", "
"0","         representation("
"0","             sides = ""numeric"""
"0","           ),"
"0","         contains = ""regpolygon4"""
"0","         )"
"0","newregpolygon4 <- function(sides = 3){"
"0","  if (sides < 2) {"
"0","    stop(""sides should be greater than or equal to 3"")"
"0","  } else if (is.infinite(sides)) {"
"0","    sides <- 99"
"0","  } else if (sides%%1 != 0) {"
"0","    stop(""sides should be integer"")"
"0","  }"
"0","  regpolygon4(sides = sides, radius = 1, shift = 0)"
"0","  "
"0","}"
"0","regpolygon4 <- function(sides, radius, shift) {"
"0","  "
"0","  theta0 <- shift + seq(0, 2 * pi, length = sides + 1)"
"0","  "
"0","  if(sides == 99) {"
"0","    name <- ""circle"""
"0","  } else if (sides < 20) {"
"0","    name <- switch(sides - 2, ""triangle"", ""square"", ""pentagon"", ""hexagon"", ""heptagon"", ""octagon"", ""enneagon"", ""decagon"", ""hendecagon"", ""dodecagon"", ""triskaidecagon"", ""tetrakaidecagon"", ""pentakaidecagon"", ""hexakaidecagon"", ""heptakaidecagon"", ""octakaidecagon"", ""enneakaidecagon"", ""enneakaidecagon"")"
"0","  } else {"
"0","    name <- paste(sides, ""gon"", sep = ""-"")"
"0","  }"
"0","  "
"0","  new(""regpolygon4"","
"0","      x = radius * round(sin(theta0), 4), "
"0","      y = radius * round(cos(theta0), 4),"
"0","      name = name,"
"0","      sides = sides,"
"0","      radius = radius,"
"0","      shift = shift"
"0","  )"
"0","}"
"0","rpg13 <- newregpolygon4()"
"0","rpg14 <- newregpolygon4(sides = 4) # Square"
"0","rpg18 <- newregpolygon4(sides = 8) # Octagon"
"0","rpg1Inf <- newregpolygon4(sides = Inf) # Circle"
