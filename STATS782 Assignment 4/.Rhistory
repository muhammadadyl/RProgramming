knitr::opts_chunk$set(echo = TRUE)
setClass("regpolygon4",
representation(
x = "numeric",
y = "numeric",
name = "character",
radius = "numeric",
shift = "numeric",
sides = "numeric"
)
)
setClass("newregpolygon4",
representation(
sides = "numeric"
),
contains = "regpolygon4"
)
newregpolygon4 <- function(sides = 3){
if (sides < 2) {
stop("sides should be greater than or equal to 3")
} else if (is.infinite(sides)) {
sides <- 99
} else if (sides%%1 != 0) {
stop("sides should be integer")
}
regpolygon4(sides = sides, radius = 1, shift = 0)
}
regpolygon4 <- function(sides, radius, shift) {
theta0 <- shift + seq(0, 2 * pi, length = sides + 1)
if(sides == 99) {
name <- "circle"
} else if (sides < 20) {
name <- switch(sides - 2, "triangle", "square", "pentagon", "hexagon", "heptagon", "octagon", "enneagon", "decagon", "hendecagon", "dodecagon", "triskaidecagon", "tetrakaidecagon", "pentakaidecagon", "hexakaidecagon", "heptakaidecagon", "octakaidecagon", "enneakaidecagon", "enneakaidecagon")
} else {
name <- paste(sides, "gon", sep = "-")
}
new("regpolygon4",
x = radius * round(sin(theta0), 4),
y = radius * round(cos(theta0), 4),
name = name,
sides = sides,
radius = radius,
shift = shift
)
}
rpg13 <- newregpolygon4()
rpg14 <- newregpolygon4(sides = 4) # Square
rpg18 <- newregpolygon4(sides = 8) # Octagon
rpg1Inf <- newregpolygon4(sides = Inf) # Circle
View(rpg13)
rpg13
