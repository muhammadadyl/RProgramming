"0","mu <- 0:6"
"0","sigma <- 1:10"
"0","ll2 <- function(theta1, theta2) { "
"0","   "
"0","  # if(length(theta1) < length(theta2)) {"
"0","  #    theta1 <- rep(theta1, len=length(theta2))"
"0","  # }"
"0","  # "
"0","  # if(length(theta2) < length(theta1)) {"
"0","  #     theta2 <- rep(theta2, len=length(theta1)) "
"0","  # }"
"0","  #  "
"0","  # ans <- numeric(length(theta1)) "
"0","  # "
"0","  # for(i in 1:length(ans)) {"
"0","  #  ans[i] <- sum(dnorm(weight, theta1[i], theta2[i], log=TRUE)) "
"0","  # } "
"0","  # "
"0","  # ans"
"0","  "
"0","  ## Recycle arguments "
"0","  n = length(weight) "
"0","  m = max(length(theta1), length(theta2)) "
"0","  "
"0","  if(length(theta1) < m) "
"0","    theta1 = rep(theta1, len=m) "
"0","  "
"0","  if(length(theta2) < m) "
"0","    theta2 = rep(theta2, len=m) "
"0","  "
"0","  ## Vector calculation "
"0","  ans = dnorm("
"0","    rep(weight, m), "
"0","    rep(theta1, each=n), "
"0","    rep(theta2, each=n), "
"0","    log=TRUE"
"0","  ) "
"0","  "
"0","  dim(ans) = c(n, m) "
"0","  "
"0","  colSums(ans)"
"0","}"
"0","z <- outer(mu, sigma, ll2)"
"0","i <- which(z == max(z), TRUE)"
"0","theta <- c(mu[i[1]], sigma[i[2]])"
"0","ll <- function(theta) { "
"0","  sum(dnorm(weight, theta[1], theta[2], log=TRUE))"
"0","}"
"0","z <- suppressWarnings(optim(theta, ll, control = list(fnscale=-1), method=""BFGS"", hessian = TRUE))"
"0","muSigmaMLE <- z$par"
"0","muSigmaMLE"
"1","[1]"
"1"," 4.8464998"
"1"," 0.6862019"
"1","
"
