# 100 - 95 / 2 = 1.25
(qtpoint <- qt(.975, df))
(ptJuice <- 2 * pt(test, df))
if(round(ptJuice, 3) == 0) {
paste("Juice Approximately equal to 0. hence juices are sugar.")
}
citrus <- juiceDrinks[juiceDrinks$Flavour=="Citrus-Blackcurrant",]
others <- juiceDrinks[juiceDrinks$Flavour=="Other",]
currantSugar = citrus$TotalSugar
otherSugar = others$TotalSugar
t.test(currantSugar, otherSugar, alternative="greater")
citrus <- juiceDrinks[juiceDrinks$Flavour=="Citrus-Blackcurrant",]
others <- juiceDrinks[juiceDrinks$Flavour=="Other",]
currantSugar = citrus$TotalSugar
otherSugar = others$TotalSugar
t.test(currantSugar, otherSugar, alternative="greater")
var.test(currantSugar,otherSugar)
boxplot(TotalSugar~Flavour,data=cordial,main="Total Sugar data",xlab="Flavour",ylab="Total Sugar")
citrus <- juiceDrinks[juiceDrinks$Flavour=="Citrus-Blackcurrant",]
others <- juiceDrinks[juiceDrinks$Flavour=="Other",]
currantSugar = citrus$TotalSugar
otherSugar = others$TotalSugar
t.test(currantSugar, otherSugar, alternative="greater")
var.test(currantSugar,otherSugar)
boxplot(TotalSugar~Flavour,data=juiceDrinks,main="Total Sugar data",xlab="Flavour",ylab="Total Sugar")
carseats <- read.csv("carseats-simple.csv")
plot(x = carseats$Price, y = carseats$Sales, xlab = "Price", ylab = "Sales")
carseatsModel <- lm(carseats$Sales~carseats$Price, data = carseats)
carseatsCoeff <- carseatsModel$coefficients
abline(carseatsCoeff[1], carseatsCoeff[2], col="Red")
(carseatsSummary <- summary(carseatsModel))
# y = Beta0 + Beta1 * X + Elipsilon
ySales = carseatsModel$coefficients[1] + carseatsModel$coefficients[2] * 150 + 0
(lowerLimit = ySales - ySales * .95)
(upperLimit = ySales + ySales * .95)
predict(carseatsModel, data.frame(Price = 150), interval = "confidence")
carseats <- read.csv("carseats-simple.csv")
plot(x = carseats$Price, y = carseats$Sales, xlab = "Price", ylab = "Sales")
carseatsModel <- lm(Sales~Price, data = carseats)
carseatsCoeff <- carseatsModel$coefficients
abline(carseatsCoeff[1], carseatsCoeff[2], col="Red")
(carseatsSummary <- summary(carseatsModel))
# y = Beta0 + Beta1 * X + Elipsilon
ySales = carseatsModel$coefficients[1] + carseatsModel$coefficients[2] * 150 + 0
(lowerLimit = ySales - ySales * .95)
(upperLimit = ySales + ySales * .95)
predict(carseatsModel, data.frame(Price = 150), interval = "confidence")
predict(mod, data.frame(Price = 150), interval="prediction")
predict(carseatsModel, data.frame(Price = 150), interval="prediction")
predict(carseatsModel, data.frame(Price = 150), interval = "confidence")
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
abline(turbineModel)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
abline(turbineModel, col="blue")
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
abline(turbineModel, col="blue")
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
curve(turbineModel, col="blue")
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] * log(turbine$Airflow), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] * log(x), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] * log(x), add=TRUE, col=2, from = c(0, 0), to = c(800, 0))
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + (coefficientTurbine[2] / x), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + (1/coefficientTurbine[2] * x), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + (1/(coefficientTurbine[2] * x)), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(expr =  coefficientTurbine[1] + coefficientTurbine[2] + log(x), add=TRUE, col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(expr =  coefficientTurbine[1] + coefficientTurbine[2] + log(turbine$Airflow), add=TRUE, col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
x <- turbine$Airflow
curve(expr =  coefficientTurbine[1] + coefficientTurbine[2] + log(x), add=TRUE, col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] + log(0:800), add=TRUE, col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] + log(x), add=TRUE, col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] + log(x), col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + coefficientTurbine[2] - log(x), col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] + (coefficientTurbine[2]/x), col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2, )
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), Add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), add=TRUE, col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbine <- read.csv("turbine-simple.csv")
plot(HeatRate~Airflow, data=turbine)
turbineModel <- lm(HeatRate~Airflow, data=turbine)
summary(turbineModel)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbine.mod1)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~(Airflow^-1), data=turbine)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~(1/Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~tan(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~(1/Airflow), data=turbine)
plot(HeatRate~(1/Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~tan(Airflow), data=turbine)
plot(HeatRate~tan(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~tan(Airflow), data=turbine)
plot(HeatRate~tan(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sin(Airflow), data=turbine)
plot(HeatRate~tan(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sin(Airflow), data=turbine)
plot(HeatRate~sin(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sec(Airflow), data=turbine)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sin(Airflow), data=turbine)
plot(HeatRate~sin(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Price = 300), interval="prediction")
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
pridictValues(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
pridictValues <- predict(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
(data.frame(Airflow = log(0:800))
pridictValues <- predict(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
(data.frame(Airflow = log(0:800)))
pridictValues <- predict(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
pridictValues <- predict(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = log(300)), interval="prediction")
predict(turbineModel1, data.frame(Airflow = log(0:800)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
lines(predictValue)
View(pridictValues)
lines(x = predictValue$fit)
lines(fit, predictValue)
lines(300, predictValue[,1]
)
line(300, predictValue[,1])
turbineModel1 <- lm(HeatRate~log(Airflow), data=turbine)
plot(HeatRate~log(Airflow), data=turbine)
abline(turbineModel1)
summary(turbineModel1)
turbineModel2 <- lm(HeatRate~sqrt(Airflow), data=turbine)
plot(HeatRate~sqrt(Airflow), data=turbine)
abline(turbineModel2)
summary(turbineModel2)
turbineModel3 <- lm(HeatRate~sin(Airflow), data=turbine)
plot(HeatRate~sin(Airflow), data=turbine)
abline(turbineModel3)
summary(turbineModel3)
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
#hypotesisData <- data.frame(TotalSugar = c(0, 1), Energy = c(0, 16.7))
#abline(lm(TotalSugar~Energy, data = hypotesisData))
lines(seq(0, 800, .1), y[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(8000,20000))
lines(seq(0, 800, .1), predictValue[,2])
coefficientTurbine <- coef(turbineModel)
curve(coefficientTurbine[1] - (coefficientTurbine[2]/x), col=2)
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(8000, 20000))
lines(seq(0, 800, .1), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .1)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(0, 20000))
lines(seq(0, 800, .1), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(0, 20000))
lines(seq(0, 800, .1), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(0, 20000))
lines(seq(0, 800, .01), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(0, 20000))
lines(seq(0, 800, .01), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(8000, 20000))
lines(seq(0, 800, .01), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(7000, 20000))
lines(seq(0, 800, .01), predictValue[,2])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(7000, 20000))
lines(seq(0, 800, .01), predictValue[,1])
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(7000, 20000))
lines(seq(0, 800, .01), predictValue[,1], col="blue")
lines(seq(0, 800, .01), predictValue[,2], col="red")
lines(seq(0, 800, .01), predictValue[,3], col="red")
par(c(1,2))
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(7000, 20000))
lines(seq(0, 800, .01), predictValue[,1], col="blue")
lines(seq(0, 800, .01), predictValue[,2], col="red")
lines(seq(0, 800, .01), predictValue[,3], col="red")
par(c(1,2));
predict(turbineModel1, data.frame(Airflow = 300), interval="prediction")
predictValue <- predict(turbineModel1, data.frame(Airflow = seq(0, 800, .01)), interval="prediction")
plot(HeatRate~Airflow, data=turbine, ylim=c(7000, 20000))
lines(seq(0, 800, .01), predictValue[,1], col="blue")
lines(seq(0, 800, .01), predictValue[,2], col="red")
lines(seq(0, 800, .01), predictValue[,3], col="red")
